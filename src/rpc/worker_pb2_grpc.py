# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from rpc import worker_pb2 as rpc_dot_worker__pb2


class WorkerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LaunchTask = channel.unary_unary(
                '/Worker/LaunchTask',
                request_serializer=rpc_dot_worker__pb2.LaunchTaskRequest.SerializeToString,
                response_deserializer=rpc_dot_worker__pb2.LaunchTaskResponse.FromString,
                )
        self.KillTask = channel.unary_unary(
                '/Worker/KillTask',
                request_serializer=rpc_dot_worker__pb2.KillTaskRequest.SerializeToString,
                response_deserializer=rpc_dot_worker__pb2.KillTaskResponse.FromString,
                )
        self.GetThroughputs = channel.unary_unary(
                '/Worker/GetThroughputs',
                request_serializer=rpc_dot_worker__pb2.GetThroughputsRequest.SerializeToString,
                response_deserializer=rpc_dot_worker__pb2.GetThroughputsResponse.FromString,
                )
        self.RegisterIterator = channel.unary_unary(
                '/Worker/RegisterIterator',
                request_serializer=rpc_dot_worker__pb2.RegisterIteratorRequest.SerializeToString,
                response_deserializer=rpc_dot_worker__pb2.RegisterIteratorResponse.FromString,
                )
        self.DeregisterIterator = channel.unary_unary(
                '/Worker/DeregisterIterator',
                request_serializer=rpc_dot_worker__pb2.DeregisterIteratorRequest.SerializeToString,
                response_deserializer=rpc_dot_worker__pb2.DeregisterIteratorResponse.FromString,
                )
        self.GetStartTimestamp = channel.unary_unary(
                '/Worker/GetStartTimestamp',
                request_serializer=rpc_dot_worker__pb2.GetStartTimestampRequest.SerializeToString,
                response_deserializer=rpc_dot_worker__pb2.GetStartTimestampResponse.FromString,
                )


class WorkerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def LaunchTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KillTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetThroughputs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterIterator(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeregisterIterator(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStartTimestamp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WorkerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LaunchTask': grpc.unary_unary_rpc_method_handler(
                    servicer.LaunchTask,
                    request_deserializer=rpc_dot_worker__pb2.LaunchTaskRequest.FromString,
                    response_serializer=rpc_dot_worker__pb2.LaunchTaskResponse.SerializeToString,
            ),
            'KillTask': grpc.unary_unary_rpc_method_handler(
                    servicer.KillTask,
                    request_deserializer=rpc_dot_worker__pb2.KillTaskRequest.FromString,
                    response_serializer=rpc_dot_worker__pb2.KillTaskResponse.SerializeToString,
            ),
            'GetThroughputs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetThroughputs,
                    request_deserializer=rpc_dot_worker__pb2.GetThroughputsRequest.FromString,
                    response_serializer=rpc_dot_worker__pb2.GetThroughputsResponse.SerializeToString,
            ),
            'RegisterIterator': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterIterator,
                    request_deserializer=rpc_dot_worker__pb2.RegisterIteratorRequest.FromString,
                    response_serializer=rpc_dot_worker__pb2.RegisterIteratorResponse.SerializeToString,
            ),
            'DeregisterIterator': grpc.unary_unary_rpc_method_handler(
                    servicer.DeregisterIterator,
                    request_deserializer=rpc_dot_worker__pb2.DeregisterIteratorRequest.FromString,
                    response_serializer=rpc_dot_worker__pb2.DeregisterIteratorResponse.SerializeToString,
            ),
            'GetStartTimestamp': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStartTimestamp,
                    request_deserializer=rpc_dot_worker__pb2.GetStartTimestampRequest.FromString,
                    response_serializer=rpc_dot_worker__pb2.GetStartTimestampResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Worker', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Worker(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def LaunchTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Worker/LaunchTask',
            rpc_dot_worker__pb2.LaunchTaskRequest.SerializeToString,
            rpc_dot_worker__pb2.LaunchTaskResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KillTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Worker/KillTask',
            rpc_dot_worker__pb2.KillTaskRequest.SerializeToString,
            rpc_dot_worker__pb2.KillTaskResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetThroughputs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Worker/GetThroughputs',
            rpc_dot_worker__pb2.GetThroughputsRequest.SerializeToString,
            rpc_dot_worker__pb2.GetThroughputsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterIterator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Worker/RegisterIterator',
            rpc_dot_worker__pb2.RegisterIteratorRequest.SerializeToString,
            rpc_dot_worker__pb2.RegisterIteratorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeregisterIterator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Worker/DeregisterIterator',
            rpc_dot_worker__pb2.DeregisterIteratorRequest.SerializeToString,
            rpc_dot_worker__pb2.DeregisterIteratorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStartTimestamp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Worker/GetStartTimestamp',
            rpc_dot_worker__pb2.GetStartTimestampRequest.SerializeToString,
            rpc_dot_worker__pb2.GetStartTimestampResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
